# Nama workflow yang akan tampil di tab Actions GitHub
name: Build and Release APK

# Pemicu: Workflow ini HANYA berjalan saat Anda mendorong (push) tag baru
# yang cocok dengan pola v*.*.* (contoh: v1.0.0, v1.2.3)
on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build-and-release:
    # Nama job yang akan tampil
    name: Build and Release APK
    # Menggunakan mesin virtual Ubuntu (Linux) terbaru dari GitHub
    
    runs-on: ubuntu-latest
    permissions: 
      contents: write
    steps:
      # Langkah 1: Mengunduh kode dari repositori Anda ke mesin virtual
      - name: Checkout repository
        uses: actions/checkout@v4

      # Langkah 2: Setup Java, ini wajib untuk proses signing APK
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      # Langkah 3: Setup Flutter SDK di mesin virtual
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.0" # Anda bisa sesuaikan dengan versi Flutter Anda
          cache: true

      # Langkah 4: Menginstal semua package yang dibutuhkan proyek (dari pubspec.yaml)
      - name: Install dependencies
        run: flutter pub get

      - name: Firebase Key
        run: |
          mkdir -p assets/firebase
          echo "${{ secrets.FIREBASE_KEY }}" >> assets/firebase/service-account.json

      # Langkah 5: Mengambil teks rahasia dari GitHub Secret dan mengubahnya kembali menjadi file kunci
      - name: Decode Keystore
        run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/temanbicara_key.keystore

      # Langkah 6: Membuat file properti kunci untuk memberitahu Flutter/Gradle di mana menemukan kunci & password
      - name: Create key.properties file
        run: |
          echo "storeFile=temanbicara_key.keystore" > android/key.properties
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties

      # Langkah 7: Proses inti, membuat file APK rilis yang sudah ditandatangani
      - name: Build Signed APK
        run: flutter build apk --release

      - name: Find APK Location
        run: ls -R build/app/outputs

      # Langkah 8: Ganti nama APK
      - name: Rename APK
        run: mv build/app/outputs/apk/release/app-release.apk build/app/outputs/apk/release/teman-bicara-${{ github.ref_name }}.apk

      # Langkah 9: Buat rilis di GitHub
      - name: Create GitHub Release and Upload APK
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          generate_release_notes: true
          files: build/app/outputs/apk/release/teman-bicara-${{ github.ref_name }}.apk
